#! /usr/bin/env python3

import cv2  
from PIL import Image
from pathlib import Path
from pprint import pprint

hexahue = {
    'a':[[255, 0, 255],[255, 0, 0],[0, 255, 0],[255, 255, 0],[0, 0, 255],[0, 255, 255]],
    'b':[[255, 0, 0],[255, 0, 255],[0, 255, 0],[255, 255, 0],[0, 0, 255],[0, 255, 255]],
    'c':[[255, 0, 0],[0, 255, 0],[255, 0, 255],[255, 255, 0],[0, 0, 255],[0, 255, 255]],
    'd':[[255, 0, 0],[0, 255, 0],[255, 255, 0],[255, 0, 255],[0, 0, 255],[0, 255, 255]],
    'e':[[255, 0, 0],[0, 255, 0],[255, 255, 0],[0, 0, 255],[255, 0, 255],[0, 255, 255]],
    'f':[[255, 0, 0],[0, 255, 0],[255, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255]],
    'g':[[0, 255, 0],[255, 0, 0],[255, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255]],
    'h':[[0, 255, 0],[255, 255, 0],[255, 0, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255]],
    'i':[[0, 255, 0],[255, 255, 0],[0, 0, 255],[255, 0, 0],[0, 255, 255],[255, 0, 255]],
    'j':[[0, 255, 0],[255, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 0],[255, 0, 255]],
    'k':[[0, 255, 0],[255, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255],[255, 0, 0]],
    'l':[[255, 255, 0],[0, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255],[255, 0, 0]],
    'm':[[255, 255, 0],[0, 0, 255],[0, 255, 0],[0, 255, 255],[255, 0, 255],[255, 0, 0]],
    'n':[[255, 255, 0],[0, 0, 255],[0, 255, 255],[0, 255, 0],[255, 0, 255],[255, 0, 0]],
    'o':[[255, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255],[0, 255, 0],[255, 0, 0]],
    'p':[[255, 255, 0],[0, 0, 255],[0, 255, 255],[255, 0, 255],[255, 0, 0],[0, 255, 0]],
    'q':[[0, 0, 255],[255, 255, 0],[0, 255, 255],[255, 0, 255],[255, 0, 0],[0, 255, 0]],
    'r':[[0, 0, 255],[0, 255, 255],[255, 255, 0],[255, 0, 255],[255, 0, 0],[0, 255, 0]],
    's':[[0, 0, 255],[0, 255, 255],[255, 0, 255],[255, 255, 0],[255, 0, 0],[0, 255, 0]],
    't':[[0, 0, 255],[0, 255, 255],[255, 0, 255],[255, 0, 0],[255, 255, 0],[0, 255, 0]],
    'u':[[0, 0, 255],[0, 255, 255],[255, 0, 255],[255, 0, 0],[0, 255, 0],[255, 255, 0]],
    'v':[[0, 255, 255],[0, 0, 255],[255, 0, 255],[255, 0, 0],[0, 255, 0],[255, 255, 0]],
    'w':[[0, 255, 255],[255, 0, 255],[0, 0, 255],[255, 0, 0],[0, 255, 0],[255, 255, 0]],
    'x':[[0, 255, 255],[255, 0, 255],[255, 0, 0],[0, 0, 255],[0, 255, 0],[255, 255, 0]],
    'y':[[0, 255, 255],[255, 0, 255],[255, 0, 0],[0, 255, 0],[0, 0, 255],[255, 255, 0]],
    'z':[[0, 255, 255],[255, 0, 255],[255, 0, 0],[0, 255, 0],[255, 255, 0],[0, 0, 255]],
    '0':[[0, 0, 0],[128, 128, 128],[255, 255, 255],[0, 0, 0],[128, 128, 128],[255, 255, 255]],
    '1':[[128, 128, 128],[0, 0, 0],[255, 255, 255],[0, 0, 0],[128, 128, 128],[255, 255, 255]],
    '2':[[128, 128, 128],[255, 255, 255],[0, 0, 0],[0, 0, 0],[128, 128, 128],[255, 255, 255]],
    '3':[[128, 128, 128],[255, 255, 255],[0, 0, 0],[128, 128, 128],[0, 0, 0],[255, 255, 255]],
    '4':[[128, 128, 128],[255, 255, 255],[0, 0, 0],[128, 128, 128],[255, 255, 255],[0, 0, 0]],
    '5':[[255, 255, 255],[128, 128, 128],[0, 0, 0],[128, 128, 128],[255, 255, 255],[0, 0, 0]],
    '6':[[],[],[]], # unnecessary number
    '7':[[],[],[]],
    '8':[[],[],[]],
    '9':[[],[],[]],
    '.':[[0, 0, 0],[255, 255, 255],[255, 255, 255],[0, 0, 0],[0, 0, 0],[255, 255, 255]],
    ',':[[255, 255, 255],[0, 0, 0],[0, 0, 0],[255, 255, 255],[255, 255, 255],[0, 0, 0]],
    ' ':[[255, 255, 255],[255, 255, 255],[255, 255, 255],[255, 255, 255],[255, 255, 255],[255, 255, 255]],
}

def reset_res_list():
   return [[] for i in range(0, 50)] 

def print_char(line_pixel):
    for p in line_pixel:
        for k,v in hexahue.items():
            if p == v:
                print(k, end='')

if __name__ == '__main__':
    print("#### start decode ####")
    img_file = 'output.png'

    img = cv2.imread(img_file)
    height, width = img.shape[:2] 
    line = 1
    res_list = reset_res_list()
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) 

    for line_index, line_pixel in enumerate(img_rgb):
        tmp_index = 0
        for i in range(0, 100, 2):
            res_list[tmp_index].append(list(line_pixel[i]))
            res_list[tmp_index].append(list(line_pixel[i+1]))
            tmp_index += 1

        if line % 3 == 0:
            print_char(res_list)
            res_list = reset_res_list()
        line += 1

